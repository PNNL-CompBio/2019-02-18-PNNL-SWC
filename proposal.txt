Proposal: Porting R gapminder plotting episode to python with plotnine

Hi folks,

As a software carpentry instructor, I have always been frustrated and disappointed with the current gapminder plotting episode.  Because Matplotib is so low-level and complex, any plotting episode for novices that uses it will always end up with something unsophisticated and ugly.  

Nowadays, there are so many high-level plotting libraries for python: bokeh, seaborn, altair, plotly, plotnine, etc.   All these libraries use a grammar of graphics to make it easy to quickly obtain sophisticated publication quality charts. Which one would be best to use?

At the same time, there is a desire within the carpentries to align python and R lessons as much as possible.  A solution that addresses both criteria is  [plotnine](https://plotnine.readthedocs.io), which is an actively supported feature-for-feature port of R's [ggplot2](https://ggplot2.tidyverse.org).  

 For example, the [data ecology lesson now uses plotnine](https://datacarpentry.org/python-ecology-lesson/07-visualization-ggplot-python/index.html)  to teach students how to plot in python.  Motivated by these arguments, for the last software carpentry workshop I taught, I went ahead and [ported the R gapminder plotting episode to python](https://nbviewer.jupyter.org/github/PNNL-CompBio/2019-03.14-15-PNNL-SWC/blob/gh-pages/Notebooks/Plotting%20with%20Plotnine.ipynb)

I realize that the current matplotlib plotting episode is fairly mature at this point, and there are some reasonable arguments for keeping it, but if you had been at the workshop, you would have seen the utter delight students had learning plotnine. It generated by far the most positive feedback for any workshop I have taught, and I just want other students and instructors to experience the joy of a plotting system that actually isn't frustrating and disappointing.

Therefore, I would like to propose replacing the current matplotlib plotting episode with the plotnine plotting episode.

Sincerely,

Jeremy




Hi @davidrpugh 

I am glad that you share my desire to move away from Matplotlib episode and I cannot deny that I too initially found the syntax of plotnine a bit confusing.  But that discomfort did not stem from its similarity to R (plotnine's syntax is actually quite pythonic), it stemmed from my struggle to grok a [grammar of graphics](https://towardsdatascience.com/a-comprehensive-guide-to-the-grammar-of-graphics-for-effective-visualization-of-multi-dimensional-1f92b4ed4149).  Once I was able to absorb its organizing principles and motivation, it became **much** easier for me to pick up other Grammar of Graphics-based tools such as plotly, bokeh, seaborn, altair, etc.  

> Is there a strong desire within the community to align the R and Python lessons as much as possible?

Well to be fair, it has been two and a half years since I [ported the data ecology plotting lesson from R to python](https://github.com/datacarpentry/python-ecology-lesson/pull/96), but from what I recall of our conversations, the prevailing argument was that aligning the R and python lessons  would  reduce cognitive load for multi-language learners and would in general improve lesson maintainability long term. Of course, in a learning community, opinions change with new evidence.  @gvwilson @rgaiacs @maxim-belkin @ntmoore what are your current opinions on [porting the gapminder plotting episode from R to python](https://nbviewer.jupyter.org/github/PNNL-CompBio/2019-03.14-15-PNNL-SWC/blob/gh-pages/Notebooks/Plotting%20with%20Plotnine.ipynb)?

Sincerely,

Jeremy
