Proposal: Porting R gapminder plotting episode to python with plotnine

Hi folks,

As a software carpentry instructor, I have always been frustrated and disappointed with the current gapminder plotting episode.  Because Matplotib is so low-level and complex, any plotting episode for novices that uses it will always end up with something unsophisticated and ugly.  

Nowadays, there are so many high-level plotting libraries for python: bokeh, seaborn, altair, plotly, plotnine, etc.   All these libraries use a grammar of graphics to make it easy to quickly obtain sophisticated publication quality charts. Which one would be best to use?

At the same time, there is a desire within the carpentries to align python and R lessons as much as possible.  A solution that addresses both criteria is  [plotnine](https://plotnine.readthedocs.io), which is an actively supported feature-for-feature port of R's [ggplot2](https://ggplot2.tidyverse.org).  

 For example, the [data ecology lesson now uses plotnine](https://datacarpentry.org/python-ecology-lesson/07-visualization-ggplot-python/index.html)  to teach students how to plot in python.  Motivated by these arguments, for the last software carpentry workshop I taught, I went ahead and [ported the R gapminder plotting episode to python](https://nbviewer.jupyter.org/github/PNNL-CompBio/2019-03.14-15-PNNL-SWC/blob/gh-pages/Notebooks/Plotting%20with%20Plotnine.ipynb)

I realize that the current matplotlib plotting episode is fairly mature at this point, and there are some reasonable arguments for keeping it, but if you had been at the workshop, you would have seen the utter delight students had learning plotnine. It generated by far the most positive feedback for any workshop I have taught, and I just want other students and instructors to experience the joy of a plotting system that actually isn't frustrating and disappointing.

Therefore, I would like to propose replacing the current matplotlib plotting episode with the plotnine plotting episode.

Sincerely,

Jeremy



